Scene History

{% set can_dig = layer > -1 %}
{% for entry in entries %}
<|SECTION:CHAPTER {{ loop.index }}|>
{{ entry["text"] }}
<|CLOSE_SECTION|>
{% endfor %}
{% if is_initial -%}
<|SECTION:CURRENT SCENE|>
{{ scene.snapshot(lines=10) }}
<|CLOSE_SECTION|>
<|SECTION:EXTRA CONTEXT|>
{% set extra_context = scene.collect_messages(typ="context_investigation", max_iterations=5) %}
{%- if not extra_context %}No extra context.{% endif %}
{%- for message in extra_context %}
{{ message.message }}

{% endfor %}
<|CLOSE_SECTION|>
{% endif %}

{% if context and False %}
<|SECTION:GATHERED CONTEXT THROUGH DIGGING|>
{% for entry in context %}
{{ entry }}

{% endfor %}
{% endif %}
{% if is_initial %}
<|SECTION:QUERY|>
{{ query }}
{% endif %} 
<|SECTION:TASK|>
The author of the scene has given YOU - the analyst - a query and is asking you to provide additional context to the actors in the scene. 

{% if analysis %}
QUERY: {{ analysis }}
{% endif %}

{% if is_initial %}- Understand the query, what do we want to find out?
- For a query to be valid any of the following must be true:
  - A character is trying to retrieve information in the form of a question.
  - A location, event, off-scene person or object is refered to that you could gather more information about.
- The query is invalid if any of these are true:
  - The answer to the query is already contained within the current scene or extra 
- If the query is invalid you must call abort() immediately.
{% endif -%}
- Read the provided chapters and select one that holds the answer or relevant context.{% if can_dig %} You can also decide to dig chapters for more information.{% else %}
- If no answer can be provided, but you can provide additional relevant context, that is also acceptable.{% endif %}
- Select a function to call to process the request.

### Available Functions
{% if can_dig %}- `dig(chapter_number)` to dig into a specific chapter for more information - number must be available and listed as a chapter above. You must call dig multiple times if there are multiple promising chapters to investigate.{% else %}- `answer(answer)` to provide an answer or context or both.
  - The answer MUST be factional information and MUST NOT mention chapter numbers.
  - Answer the query and provide contextual and circumstantial details.
  - Limit the answer to two paragraphs.
  - The answer text must be explanatory summarization, NOT narration.
{% endif %}
- `abort()` to stop the process if there are no avenues left to explore and there is no information to satisfy the query.

### Rules
- You MUST NOT mix functions
{%- if can_dig %}
- Digging is expensive. Only dig chapters if they are highly likely to be related to the query.{% endif %}
{%- if not can_dig %}
- When using the `answer()` function always write from the perspective of the investigator.{% endif %}
- Use untyped code blocks, so ``` instead of ```python.
- You must never invent information. Dig instead.
- End with `DONE` after calling a function.
- You must not invent or guess
{% if is_initial %}- if answer contained in extra context the query is invalid and you must abort
- if answer contained in current scene the query is invalid and you must abort{% endif %}

### Response Format
Follow this format exactly:

{% if is_initial %}QUERY: <Analysis of the query, what could be the reason this query was given to you? Be very strict with your evaluation. Many queries are given in error.>

ANALYSIS:
- character trying retrieve information: <yes or no>.
- answer contained in current scene: <yes or no>.
- answer contained in extra context: <yes or no>.
- location, event, off-scene person or object mentioned: <yes or no>.
- query valid based on the above: <yes or no>.

<Quick Analysis of the provided information>

{% else %}
ANALYSIS: <Quick Analysis of the provided information>

{% endif -%}

FUNCTION SELECTED: <Quickly explain which function you have selected and why.>

CALL:
```
<function_name>(<arguments>)
```
DONE
<|CLOSE_SECTION|>
{{ bot_token }}{% if is_initial %}QUERY:{% else %}ANALYSIS:{% endif %}